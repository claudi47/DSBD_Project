version: '3.9'

services:

  mongo_betData:
    image: mongo
    ports:
      - "27018:27017"
    volumes:
      - database_betdata:/data/db
      # - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE

  mongo-express-betData:
    image: mongo-express
    restart: always
    depends_on:
      - mongo_betData
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD
      - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL_BETDATA}

  mongo_user:
      image: mongo
      ports:
        - '27017:27017'
      volumes:
        - database_user:/data/db
        # - ./mammamia.js:/mamma/orco.js:ro
        # - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      restart: always
      environment:
        - MONGO_INITDB_ROOT_USERNAME
        - MONGO_INITDB_ROOT_PASSWORD
        - MONGO_INITDB_DATABASE

  mongo-express_user:
    image: mongo-express
    restart: always
    ports:
      - "8083:8081"
    depends_on:
      - mongo_user
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD
      - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL_USER}

  csv-gen:
    image: lauralex/dsbd_csv_gen
    depends_on:
      - broker
      - schema-registry
    build:
      context: ./DSBD_csv_gen
    environment:
      - BROKER
      - SCHEMA_REGISTRY

  user-service:
    ports:
      - "9090:8500"
    image: lauralex/dsbd_user_service
    build:
      context: ./DSBD_UserService
    depends_on:
      - broker
      - schema-registry
      - mongo_user
    environment:
      - DB_HOST=${DB_HOST_USER}
      - DB_DATABASE
      - BROKER
      - SCHEMA_REGISTRY

  bot:
    image: lauralex/dsbd_bot
    environment:
      - BOT_TOKEN_DSBD
      - BROKER
      - SCHEMA_REGISTRY
      - BETDATA_SERVICE_URL
      - USER_SERVICE_URL
    depends_on:
      - broker
      - schema-registry
    build:
      context: ./DSBD_Bot

  bet_data_service:
    image: lauralex/dsbd_betdata_service
    environment:
      - DB_HOST=${DB_HOST_BETDATA}
      - DB_DATABASE
      - BROKER
      - SCHEMA_REGISTRY
    build:
      context: ./DSBD_BetDataService
    depends_on:
      - broker
      - schema-registry
      - mongo_betData

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper

    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./kafkavol/zookeeper-data:/var/lib/zookeeper/data
      - ./kafkavol/zookeeper-tx:/var/lib/zookeeper/log

  broker:
    image: confluentinc/cp-server:7.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes:
      - ./kafkavol/kafka-data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.0.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
      - connect
      - ksqldb-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

volumes:
  database_betdata:
  database_user: