version: '3.9'

services:

  mongo:
    image: mongo
    volumes:
      - database:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD
      - ME_CONFIG_MONGODB_URL

  server:
    image: lauralex/dsbd_server
    environment:
      - DB_USERNAME
      - DB_PASSWORD
      - DB_URL
      - DB_PORT
      - DB_DATABASE
    depends_on:
      - mongo
    build:
      context: ./DSBD_Server

  bot:
    image: lauralex/dsbd_bot
    environment:
      - BOT_TOKEN_DSBD
    depends_on:
      - server
    build:
      context: ./DSBD_Bot
    volumes:
      - tmpfiles:/tmpfiles

  stats_settings:
    image: lauralex/dsbd_stats_settings
    environment:
      - DB_USERNAME
      - DB_PASSWORD
      - DB_URL
      - DB_PORT
      - DB_DATABASE
    depends_on:
      - mongo
    build:
      context: ./DSBD_Stats_Settings
    volumes:
      - tmpfiles:/tmpfiles

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - kafkavol:/bitnami/kafka

volumes:
  database:
  tmpfiles:
  kafkavol: